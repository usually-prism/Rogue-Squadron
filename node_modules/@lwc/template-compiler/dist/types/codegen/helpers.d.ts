import * as t from '../shared/estree';
import { IRElement, IRNode } from '../shared/types';
import CodeGen from './codegen';
export declare function identifierFromComponentName(name: string): t.Identifier;
export declare function getMemberExpressionRoot(expression: t.MemberExpression): t.Identifier;
export declare function objectToAST(obj: object, valueMapper: (key: string) => t.Expression): t.ObjectExpression;
export declare function containsDynamicChildren(children: IRNode[]): boolean;
export declare function shouldFlatten(children: IRNode[], codeGen: CodeGen): boolean;
/**
 * Returns true if the AST element or any of its descendants use an id attribute.
 */
export declare function hasIdAttribute(element: IRElement): boolean;
export declare function memorizeHandler(codeGen: CodeGen, element: IRElement, parentStack: IRNode[], componentHandler: t.Expression, handler: t.Expression): t.Expression;
export declare function generateTemplateMetadata(codeGen: CodeGen): t.Statement[];
export declare function parseStyleText(cssText: string): {
    [name: string]: string;
};
export declare function styleMapToStyleDeclsAST(styleMap: {
    [name: string]: string;
}): t.ArrayExpression;
export declare function parseClassNames(classNames: string): string[];
